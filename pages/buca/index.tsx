import Sidebar from "@/ui/Sidebar";
import * as React from "react";
import { Masonry, useInfiniteLoader } from "masonic";
import { Asset } from "@type-buca";
import { GET_ASSETS } from "@/gql/query";
import {
  addApolloStateAndReturnPageProps,
  initializeApollo,
} from "@/config/gqlClient";
import { useLazyQuery } from "@apollo/client";
import { BucaCard } from "@/ui/Buca/Card";
import { NextPage } from "next";
import Head from "next/head";

let page = 0;

export default function Page({ data }: { data: Asset[] }) {
  const [items, setItems] = React.useState<Asset[]>(data);

  const [fetchData, { loading, error }] = useLazyQuery<{
    assets: Asset[];
  }>(GET_ASSETS, {
    variables: {
      assetsId: page,
    },
    onCompleted(data) {
      const nextItems: Asset[] = [];
      const start = 0;
      const end = 100;

      for (let i = start; i < end; i++) {
        nextItems.push(...data.assets);
      }
      setItems((prev) => [...prev, ...nextItems]);
    },
  });

  // 무한 스크롤
  const maybeLoadMore = useInfiniteLoader(
    async (start, end, currentItems) => {
      if (!loading) {
        fetchData();
        page += 1;
      }
    },
    {
      isItemLoaded: (index, items) => !!items[index],
      minimumBatchSize: 30, // 한 번에 로드할 항목의 최소 개수
      threshold: 3, // 데이터를 미리 가져올 임계점
      // number: number // 최종 로드해야할 총 항목의 수 (알고 있는 경우에 입력)
    }
  );

  React.useEffect(() => {
    fetchData();
  }, [fetchData]);

  return (
    <Masonry
      onRender={maybeLoadMore}
      items={items}
      columnGutter={30}
      columnWidth={347}
      overscanBy={1.25}
      render={BucaCard}
    />
  );
}

Page.getLayout = function getLayout(page: NextPage) {
  return (
    <>
      <Head>
        <title>Buca</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex w-full">
        <Sidebar />
        <section className="flex flex-col box-border rounded-xl w-full mt-[101px] mx-5 ">
          <header className="z-1 fixed top-0 flex align-center w-full h-[101px] bg-white">
            테그 들어갈 부분
          </header>
          <>{page}</>
        </section>
      </main>
    </>
  );
};

// 개발 모드에서는 getStaticProps가 대신 각 요청에서 실행됩니다.
export async function getServerSideProps() {
  const apolloClient = initializeApollo();

  const { data } = await apolloClient.query<{ assets: Asset[] }>({
    query: GET_ASSETS,
    variables: {
      assetsId: page,
    },
  });

  return addApolloStateAndReturnPageProps(apolloClient, {
    props: {
      data: data.assets,
    },
  });
}
